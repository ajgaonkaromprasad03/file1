#slip:01
#Q.1) Write a Python function to check whether a number is in a given range.
def test_range(n):
 if n in range(3,9):
 print( " %s is in the range"%str(n))
 else :
 print("The number is outside the given range.")
test_range(7)
I

#Q.2) Write a Python program to find set difference, union, intersection and
symmetric difference.
a={1,2,3,4,5};
b={4,5,6,7,8,9};
print("union:",a|b)
print("set difference:",a-b)
print("intersection:",a&b)
print("symmetric difference:",a^b)
I

#slip:02
I
#Q.1) Write a Python program to get the 4th element from front and 4th
element from last of a tuple.
a=(1,2,3,4,5,6,8,7,9);
print ("fourth element from front:",a[3])
print ("fourth element from last:",a[-4])
fourth element from front: 4
fourth element from last: 6
I
#Q.2) Write a Python program to combine two dictionary adding values for
common keys.
#d1 = {&#39;a&#39;: 100, &#39;b&#39;: 200, &#39;c&#39;:300} d2 =
{&#39;a&#39;: 300, &#39;b&#39;: 200,&#39;d&#39;:400}
#Sample output: ({&#39;a&#39;: 400, &#39;b&#39;: 400,&#39;d&#39;: 400,
&#39;c&#39;: 300})
I
#Q.2) Write a Python program to perform given operations on set.
#a. check whether 2 sets are equal or not
#b. Symmetric difference
#c. Intersection of sets
#d. Find maximum and the minimum value in a set.

a={1,2,3,4,5,6};
b={1,7,8,9,6};
#a
print("equal Or not?",a==b)
#b
result=a.symmetric_difference(b)
print("symmetric difference:",result)
#c
c=a.intersection(b) #c=a&b
print("intersection:",c)
#d
print("maximum:",max(a))
print("minumim:",min(a))
:
#slip:03
#Q1)Write a Python program to find the repeated items of a tuple.
a=(10,20,30,10,40)
print(a)
count=a.count(10)
print(count)
#Q.2) Write a Python program to match key values in two dictionaries.
#Sample dictionary: {&#39;key1&#39;: 1, &#39;key2&#39;: 3, &#39;key3&#39;:
2}, {&#39;key1&#39;: 1, &#39;key2&#39;: 2}
#Expected output: key1: 1 is present in both x and y
#Q.2) Write a Python program to create a set with any 3 weekdays. Add single
element to the set and print it.
#Add multiple elements and print the set.
a={"Monday","tuesday","wednesday"};
b={"thursday","friday","saturday"};
print(a)
a.add("sunday")
print(a)
a.update(b)
print(a)
#slip:04
#Q.1)Write a Python program to sort the tuple T=(4,2,6.8,1.8,10).
T=(4,2,6.8,1.8,10);
print(sorted(T))
I
#Q.2)Write a function to calculate the sum of numbers from 0 to n.
def sum_numbers(n):
 sum = 0
 for i in range(n+1):
 sum += i
 return sum
a=sum_numbers(5)
print(a)
#Q.2)Write a Python program to create a dictionary from two lists without
losing duplicate values.
#Sample lists: ['Class-V', 'Class-VI', 'Class-VII', 'Class-VIII'], [1, 2, 2,
3]
#Expected Output: defaultdict(<class 'set'>, {'Class-VII': {2}, 'Class-VI':
{2}, 'Class-VIII':{3}, 'Class-V': {1}})
from collections import defaultdict #defaultdict class from the collections
module to create a dictionary that has a default value of an empty set
keys = ['Class-V', 'Class-VI', 'Class-VII', 'Class-VIII']
values = [1, 2, 2, 3]
result = defaultdict(set)
for key, value in zip(keys, values): #zip function to combine the two lists
into pairs of keys and values, and for each pair.
 result[key].add(value)
print(result)
#slip:05
#Q.1)Write a Python program to print the set difference and a symmetric
difference of two sets.
A={1,2,3,4,5}
B={2,5,6,7,8,10}
c= A.symmetric_difference(B)
print("symmertric difference:",c)
d=A.difference(b)
print("Set difference:",d)
#Q.2)Write a Python program to create and display all combinations of
letters, selecting each letter from a different key in a dictionary.
#Sample data: {'1':['a','b'], 2':['c','d']} Expected Output:
#ac ad bc bd
#Q.2)Write a Python program to display occurrence of the elements in the
tuple, which appears more than 2 times.
t=(1,2,3,45,5,6,1,2,1)
counts={}
for element in t:
 if element in counts:
 counts[element]=counts[element]+1
 else:
 counts[element]=1
for element,count in counts.items():
 if count >2:
 print(f"{element}:{count}")
#slip:06
#Q.1)Write a Python program to find maximum and the minimum value in a set.
a={12,4,5,2}
print(max(a))
print(min(a))
#Q.2)Write a Python script to generate and print a dictionary that contains a
number (between 1 to n) in the form (x, x*x).
#Sample Dictionary (n = 5): Expected Output: {1: 1, 2: 4, 3: 9, 4: 16, 5:
25}
#Q.2)Write a Python program to unpack a tuple in several variables. Display
type of each variable.
a=(12,"Nilesh",53)
(rollno,name,marks)=a
print(rollno)
print(name)
print(marks)
#slip:07
#Q.1)Write a Python program to print average of all elements of sets.
tup={4,5,1,2,9,7,10,8}
count=0
for i in tup:
 count+=i
avg=count/len(tup)
print("average",avg)
average 5.75
#Q.2)Write a Python program to match key values in two dictionaries. Sample
dictionary: {'key1': 1, 'key2': 3, 'key3': 2}, {'key1': 1, 'key2': 2}
#Expected output: key1: 1 is present in both x and y
d1={'a':100,'b':200,'c':300}
d2={'a':300,'b':100,'c':300}
for(key,value)in set(d1.items()) & set(d2.items()):
 print("%s:%s is present in both d1 and d2"%(key,value))
#Q.2)Write a Python function to multiply all the numbers in a list.
#Sample-List: (8, 2, 3, -1, 7)
#Expected Output: -336
list=[8,2,3,-1,7]
def mul(list):
 result=1
 for i in list:
 result=result*i
 return result
print("Multiplication:")
print(mul(list))
#slip:08
#Q.1)Write a Python program to create a tuple using two different tuples.
t1=(1,2,3,4,5)
t2=('a','b','c','d')
t3=t1+t2
print(t3)
#Q.2)Write a Python program to sort (ascending and descending) a dictionary
by value.
# Sample dictionary
my_dict = {'apple': 56, 'banana': 12, 'orange': 32, 'kiwi': 9}
# Sort dictionary by value in ascending order
sorted_dict_asc = dict(sorted(my_dict.items(), key=lambda x: x[1]))
# Sort dictionary by value in descending order
sorted_dict_desc = dict(sorted(my_dict.items(), key=lambda x: x[1],
reverse=True))
# Print sorted dictionaries
print("Dictionary sorted by value in ascending order:", sorted_dict_asc)
print("Dictionary sorted by value in descending order:", sorted_dict_desc)
#Q.2)Write a Python program to count the occurrences of each word in a given
sentence.
string=input("Enter the string:")
word=input("Enter the word:")
a=[]
count=0
a=string.split(" ")
for i in range(0,len(a)):
 if(word==a[i]):
 count=count+1
 print(count)
#Q.2)Write a Python program to count the occurrences of each word in a given
sentence.
string=input("Enter string:")
word=input("Enter word:")
a=[]
count=0
a=string.split(" ")
for i in range(0,len(a)):
 if(word==a[i]):
 count=count+1
print("Count of the word is:")
print(count)
#slip:09
#Q.1)Write an anonymous function to calculate area of square
square = lambda x:x**2
print("area of square:",square(5))
#Q.2)Write a Python program to create a dictionary from a string.
#Sample String: ’Hello all’
#Expected output: {'e': 1, 'o': 1, 'a': 1, 'l': 4, 'H': 1}
st = input("Enter a string: ")
dic = {} #creates an empty dictionary
for ch in st:
 if ch in dic: #if next character is already in the dictionary
 dic[ch] += 1
 else:
 dic[ch] = 1 #if ch appears for the first time
for key in dic:
 print(key,':',dic[key])
#slip:10
#1)Write a Python program to accept the strings which contains all vowels.
def check(string):
 vowels = set("aeiou")
 return vowels.issubset(string.lower())
string = input("Enter a string: ")
if check(string):
 print("The string contains all vowels!")
else:
 print("The string does not contain all vowels.")
#2Write a Python program to reverse a given number.
num = int(input("Enter a number: "))
rev = 0
rem = 0
while num > 0:
 rem = num % 10
 rev = rev * 10 + rem
 num = num // 10
print("Reversed number: ", rev)
Enter a number: 321
Reversed number: 123
#3)Write a Python program to accept n numbers in list. Find average of list
and sort it in descending order.
n = int(input("Enter the number of elements in the list: "))
my_list = []
for i in range(n):
 my_list.append(float(input("Enter element {}: ".format(i+1))))
average = sum(my_list) / n
print("The average of the list is:", average)
sorted_list = sorted(my_list, reverse=True)
print("The sorted list in descending order is:", sorted_list)
#slip:11
#Q.1)Write a Python program to find the length of a string without using
built-in function.
a=input("enter the string:")
count=0
for char in a:
 count=count+1

print("length:",count)
#Q.2)Write a Python program to accept string and remove the characters which
have odd index values of a given string using user defined function.
string=input("Enter the string")
def odd(string):
 new_str=""
 for i in range(len(string)):
 if i % 2 ==0:
 new_str=new_str+string[i]
 return new_str
new_str =odd(string)
print("The modified string is:", new_str)



#slip:12
#Q.1)Write a program which prints Fibonacci series of a number.
def fibonacci(n):
 a = 0
 b = 1
 for i in range(n):
 print(a, end=" ")
 c = a + b
 a = b
 b = c
n =int(input("Enter the number of terms: "))
fibonacci(n)
#Q.2)Write a Python program to accept a string and from a given string where
all occurrences of its first character have been changed to '$', except the
first char itself.
#Q.2)Write a Python program to generate and print a dictionary that contains
a number (between 1 and n) in the form (x, x*x).
#Sample Dictionary (n = 5)
#Expected Output: {1: 1, 2: 4, 3: 9, 4: 16, 5: 25}
n = int(input("Enter a number: "))
dict = {}
for i in range(1, n+1):
 dict[i] = i*i
# print the generated dictionary
print(dict)
#slip:13
#Q.1)Write a Python program to create a tuple of n numbers and print maximum,
minimum, and sum of elements in a tuple.
tuple=(10,40,50,50)
a=max(tuple)
print(a)
b=min(tuple)
print(b)
s=sum(tuple)
print(s)
#Q.2)Write a Python program which accept an integer value ‘n’ and display all
prime numbers till ‘n’.
def isPrime(n):
 if n <= 1 :
 return False
 for i in range(2, n):
 if n % i == 0:
 return False
 return True

def printPrime(n):
 for i in range(2, n + 1):
 if isPrime(i):
 print(i, end = " ")
if __name__ == "__main__" :
 #n = 7
 n=int(input("enter the number")
 printPrime(n)
#slip:14
#Q.1)Write a python program to check if a string is a Palindrome or not.
string=input("enter the string:")
if string == string[::-1]:
 print("pallindrom")
else:
 print("not pallindrom")
#Q.2) Write a Python program which finds sum of digits of a number.
#Example n=135 then output is 9 (1+3+5).
def sum_digit(n):
 sum=0
 while n>0:
 sum+= n%10
 n=n//10
 return sum
n=int(input("enter the number:"))
print("sum:",sum_digit(n))
#slip:15
#Q.1)Write a Python program to create tuple of n numbers,
#print the first half values of tuple in one line and the last half values of
tuple on next line.
def split_tuple(n):
 nums = tuple(range(1, n+1))

 mid = len(nums) // 2

 print("First half:", end=" ")
 for i in range(mid):
 print(nums[i], end=" ")
 print()

 print("Last half:", end=" ")
 for i in range(mid, len(nums)):
 print(nums[i], end=" ")
 print()
n = int(input("Enter the value of n: "))
split_tuple(n)
#Q.2)Write a Python program which prints fibonacci series of a number.
def fibonacci(n):
 a=0
 b=1
 print(a,b,end=" ")
 for i in range(2,n):
 c=a+b
 print(c,end=" ")
 a=b
 b=c
n = int(input("Enter a number: "))
print("The Fibonacci series of", n, "is:")
fibonacci(n)

#slip:16
#Q.1)Write a Python program to accept and convert string in uppercase or vice
versa.
def convert_case(s, case):
 if case == "upper":
 return s.upper()
 elif case == "lower":
 return s.lower()
 else:
 return "Invalid input. Please enter 'upper' or 'lower'."
s = input("Enter a string: ")
case = input("Enter 'upper' to convert to uppercase or 'lower' to convert to
lowercase: ")
result = convert_case(s, case)
print("The converted string is:", result)
#Q.3)Write a Python program to display the following pattern (Floyd's
triangle) For n=3
#1
#2 3
#4 5 6
def floyd(n):
 num=1
 for i in range(1,n+1):
 for j in range(1,i+1):
 print(num,end="\t")
 num+=1
 print()
n=int(input("enter the number:"))
floyd(n)
#slip:17
#Q.1)Write an anonymous function to calculate area of square.
area=lambda s:s**2
s=int(input("enter the number:"))
a=area(s)
print(a)
#Q.2) Write a Python program to accept n elements in a set and find
#the length of a set, maximum, minimum value and the sum of values in a set.
(Don’t use built-in function)
def set_stats(n):
 my_set = set()
 my_sum = 0

 for i in range(n):
 element = int(input("Enter element " + str(i+1) + ": "))
 my_set.add(element)
 my_sum += element

 length = 0
 max_val = None
 min_val = None

 for element in my_set:
 length += 1

 if max_val is None or element > max_val:
 max_val = element

 if min_val is None or element < min_val:
 min_val = element

 # Display the results
 print("The length of the set is:", length)
 print("The maximum value in the set is:", max_val)
 print("The minimum value in the set is:", min_val)
 print("The sum of values in the set is:", my_sum)
n =int(input("enter nom of elements:"))
print("Enter", n, "elements for the set:")
set_stats(n)
#slip:18
#1)Write a Python program to calculate the average of numbers in a given
list.
set=[1,2,3,4,5]
a=0
count=0
for num in set:
 a+=num
 count+=1
avg=a//count
print(avg)
#Q.2)Write a Python function to get a string made of the first 2 and the last
2 chars from a given string. If the string length is less than 2, it return
empty string.
#Sample String: 'General12' Expected Result: 'Ge12' Sample String: 'Ka'
 Expected Result: 'KaKa'
#Sample String: ' K' Expected Result: Empty String
def get_first_last_two_chars(s):
 if len(s) < 2:
 return ''
 else:
 return s[:2] + s[-2:]
print(get_first_last_two_chars('General12'))
print(get_first_last_two_chars('Ka'))
print(get_first_last_two_chars('K'))
#Q.3)Write a program to display following pattern.
#1 2 3 4
#1 2 3
#1 2
#1
n = 4
for i in range(n):
 for j in range(n-i):
 print(j+1, end='\t')
 print()

#slip:19
#Q.1)Write an anonymous function to calculate area of square.

area=lambda s:s**2
s=int(input("enter the side:"))
a=area(s)
print(a)

#Q.2)Write a Python program which finds sum of digits of a number. [20 M]
Example n=130 then output is 4 (1+3+0).

def sum_digit(n):
 sum=0
 while n>0:
 sum+= n%10
 n=n//10
 return sum
n=int(input("enter the number:"))
print("sum:",sum_digit(n))

#slip:20
#Q.1)Write a Python program to unpack a tuple in several variables.
t = (1, 2, 3, 'hello', 'world')
a, b, c, d, e = t
# print the values of the variables
print(a)
print(b)
print(c)
print(d)
print(e)
#Q.2) Write a Python program which accepts 6 integer values and prints
“DUPLICATES” if any of the values entered are duplicates otherwise it prints
“ALL UNIQUE”.
#Example: Let 5 integers are (32, 10, 45, 90, 45, 6) then output “DUPLICATES”
to be printed.
values = []
for i in range(6):
 value = int(input(f"Enter value {i+1}: "))
 values.append(value)
# check for duplicates
if len(values) != len(set(values)):
 print("DUPLICATES")
else:
 print("ALL UNIQUE") 
